rm(list = ls())
#correlation for feature vs function
library(corrplot)
data <- read.csv("Function_Array_SERUM.csv")
is.na(data)
data <- na.omit(data)
featCols = c(2:6)
fxnCols = 7:20
corrMat = matrix(0, nrow = length(fxnCols), ncol = length(featCols))
colnames(corrMat) = colnames(data)[featCols]
row.names(corrMat) = colnames(data)[fxnCols]
pMat = corrMat
for (i in 1:nrow(corrMat)){
for (j in 1:ncol(corrMat)){
fxn = row.names(corrMat)[i]
feat = colnames(corrMat)[j]
corrMat[fxn,feat] = cor(x = data[,feat], y = data[,fxn])
pMat[fxn,feat] = cor.test(x = data[,feat], y = data[,fxn])$p.value
}
}
corrplot(corrMat, p.mat = pMat, method = "shade", tl.cex = 0.75, sig.level = c(.001, .01, .05), pch.cex =0.8,
insig = "label_sig", pch.col = "white", is.corr=FALSE,
col=colorRampPalette(c("dark orange", "white", "blue"))(50), tl.col = "black", cl.lim=c(-1,1))
data <- read.csv("Function_Array_NASAL.csv")
is.na(data)
data <- na.omit(data)
featCols <- c(2:6)
fxnCols <- 7:20
corrMat <- matrix(0, nrow = length(fxnCols), ncol = length(featCols))
colnames(corrMat) = colnames(data)[featCols]
row.names(corrMat) = colnames(data)[fxnCols]
pMat = corrMat
for (i in 1:nrow(corrMat)){
for (j in 1:ncol(corrMat)){
fxn = row.names(corrMat)[i]
feat = colnames(corrMat)[j]
corrMat[fxn,feat] = cor(x = data[,feat], y = data[,fxn])
pMat[fxn,feat] = cor.test(x = data[,feat], y = data[,fxn])$p.value
}
}
corrplot(corrMat, p.mat = pMat, method = "shade", tl.cex = 0.75, sig.level = c(.001, .01, .05), pch.cex =0.8,
insig = "label_sig", pch.col = "white", is.corr=FALSE,
col=colorRampPalette(c("dark orange", "white", "blue"))(50), tl.col = "black", cl.lim=c(-1,1))
rm(list = ls())
#correlation for feature vs function
library(corrplot)
data <- read.csv("Function_Array_SERUMv1.csv")
is.na(data)
data <- na.omit(data)
featCols = c(2:6)
fxnCols = 7:20
corrMat = matrix(0, nrow = length(fxnCols), ncol = length(featCols))
colnames(corrMat) = colnames(data)[featCols]
row.names(corrMat) = colnames(data)[fxnCols]
pMat = corrMat
for (i in 1:nrow(corrMat)){
for (j in 1:ncol(corrMat)){
fxn = row.names(corrMat)[i]
feat = colnames(corrMat)[j]
corrMat[fxn,feat] = cor(x = data[,feat], y = data[,fxn])
pMat[fxn,feat] = cor.test(x = data[,feat], y = data[,fxn])$p.value
}
}
corrplot(corrMat, p.mat = pMat, method = "shade", tl.cex = 0.75, sig.level = c(.001, .01, .05), pch.cex =0.8,
insig = "label_sig", pch.col = "white", is.corr=FALSE,
col=colorRampPalette(c("dark orange", "white", "blue"))(50), tl.col = "black", cl.lim=c(-1,1))
data <- read.csv("Function_Array_NASALv1.csv")
is.na(data)
data <- na.omit(data)
featCols <- c(2:6)
fxnCols <- 7:20
corrMat <- matrix(0, nrow = length(fxnCols), ncol = length(featCols))
colnames(corrMat) = colnames(data)[featCols]
row.names(corrMat) = colnames(data)[fxnCols]
pMat = corrMat
for (i in 1:nrow(corrMat)){
for (j in 1:ncol(corrMat)){
fxn = row.names(corrMat)[i]
feat = colnames(corrMat)[j]
corrMat[fxn,feat] = cor(x = data[,feat], y = data[,fxn])
pMat[fxn,feat] = cor.test(x = data[,feat], y = data[,fxn])$p.value
}
}
corrplot(corrMat, p.mat = pMat, method = "shade", tl.cex = 0.75, sig.level = c(.001, .01, .05), pch.cex =0.8,
insig = "label_sig", pch.col = "white", is.corr=FALSE,
col=colorRampPalette(c("dark orange", "white", "blue"))(50), tl.col = "black", cl.lim=c(-1,1))
rm(list = ls())
#correlation for feature vs function
library(corrplot)
data <- read.csv("Function_Array_SERUMv1.csv")
is.na(data)
data <- na.omit(data)
featCols = c(2:6)
fxnCols = 7:20
View(data)
rm(list = ls())
#correlation for feature vs function
library(corrplot)
data <- read.csv("Function_Array_SERUMv1.csv")
is.na(data)
data <- na.omit(data)
featCols = c(2:6)
fxnCols = 7:20
corrMat = matrix(0, nrow = length(fxnCols), ncol = length(featCols))
colnames(corrMat) = colnames(data)[featCols]
row.names(corrMat) = colnames(data)[fxnCols]
pMat = corrMat
for (i in 1:nrow(corrMat)){
for (j in 1:ncol(corrMat)){
fxn = row.names(corrMat)[i]
feat = colnames(corrMat)[j]
corrMat[fxn,feat] = cor(x = data[,feat], y = data[,fxn])
pMat[fxn,feat] = cor.test(x = data[,feat], y = data[,fxn])$p.value
}
}
corrplot(corrMat, p.mat = pMat, method = "shade", tl.cex = 0.75, sig.level = c(.001, .01, .05), pch.cex =0.8,
insig = "label_sig", pch.col = "white", is.corr=FALSE,
col=colorRampPalette(c("dark orange", "white", "blue"))(50), tl.col = "black", cl.lim=c(-1,1))
data <- read.csv("Function_Array_NASALv1.csv")
is.na(data)
data <- na.omit(data)
featCols <- c(2:6)
fxnCols <- 7:20
corrMat <- matrix(0, nrow = length(fxnCols), ncol = length(featCols))
colnames(corrMat) = colnames(data)[featCols]
row.names(corrMat) = colnames(data)[fxnCols]
pMat = corrMat
for (i in 1:nrow(corrMat)){
for (j in 1:ncol(corrMat)){
fxn = row.names(corrMat)[i]
feat = colnames(corrMat)[j]
corrMat[fxn,feat] = cor(x = data[,feat], y = data[,fxn])
pMat[fxn,feat] = cor.test(x = data[,feat], y = data[,fxn])$p.value
}
}
corrplot(corrMat, p.mat = pMat, method = "shade", tl.cex = 0.75, sig.level = c(.001, .01, .05), pch.cex =0.8,
insig = "label_sig", pch.col = "white", is.corr=FALSE,
col=colorRampPalette(c("dark orange", "white", "blue"))(50), tl.col = "black", cl.lim=c(-1,1))
rm(list = ls())
#correlation for feature vs function
library(corrplot)
data <- read.csv("Function_Array_SERUMv1.csv")
is.na(data)
data <- na.omit(data)
featCols = c(2:6)
fxnCols = 7:20
corrMat = matrix(0, nrow = length(fxnCols), ncol = length(featCols))
colnames(corrMat) = colnames(data)[featCols]
row.names(corrMat) = colnames(data)[fxnCols]
pMat = corrMat
for (i in 1:nrow(corrMat)){
for (j in 1:ncol(corrMat)){
fxn = row.names(corrMat)[i]
feat = colnames(corrMat)[j]
corrMat[fxn,feat] = cor(x = data[,feat], y = data[,fxn])
pMat[fxn,feat] = cor.test(x = data[,feat], y = data[,fxn])$p.value
}
}
corrplot(corrMat, p.mat = pMat, method = "shade", tl.cex = 0.75, sig.level = c(.001, .01, .05), pch.cex =0.8,
insig = "label_sig", pch.col = "white", is.corr=FALSE,
col=colorRampPalette(c("dark orange", "white", "blue"))(50), tl.col = "black", cl.lim=c(-1,1))
rm(list = ls())
#correlation for feature vs function
library(corrplot)
data <- read.csv("Function_Array_SERUMv1.csv")
is.na(data)
data <- na.omit(data)
featCols = c(2:6)
fxnCols = 7:20
corrMat = matrix(0, nrow = length(fxnCols), ncol = length(featCols))
colnames(corrMat) = colnames(data)[featCols]
row.names(corrMat) = colnames(data)[fxnCols]
pMat = corrMat
for (i in 1:nrow(corrMat)){
for (j in 1:ncol(corrMat)){
fxn = row.names(corrMat)[i]
feat = colnames(corrMat)[j]
corrMat[fxn,feat] = cor(x = data[,feat], y = data[,fxn])
pMat[fxn,feat] = cor.test(x = data[,feat], y = data[,fxn])$p.value
}
}
corrplot(corrMat, p.mat = pMat, method = "shade", tl.cex = 0.75, sig.level = c(.001, .01, .05), pch.cex =0.8,
insig = "label_sig", pch.col = "white", is.corr=FALSE,
col=colorRampPalette(c("dark orange", "white", "blue"))(50), tl.col = "black", cl.lim=c(-1,1))
rm(list = ls())
#correlation for feature vs function
library(corrplot)
data <- read.csv("Function_Array_SERUMv1.csv")
is.na(data)
data <- na.omit(data)
featCols = c(2:6)
fxnCols = 7:20
corrMat = matrix(0, nrow = length(fxnCols), ncol = length(featCols))
colnames(corrMat) = colnames(data)[featCols]
row.names(corrMat) = colnames(data)[fxnCols]
pMat = corrMat
for (i in 1:nrow(corrMat)){
for (j in 1:ncol(corrMat)){
fxn = row.names(corrMat)[i]
feat = colnames(corrMat)[j]
corrMat[fxn,feat] = cor(x = data[,feat], y = data[,fxn])
pMat[fxn,feat] = cor.test(x = data[,feat], y = data[,fxn])$p.value
}
}
corrplot(corrMat, p.mat = pMat, method = "shade", tl.cex = 0.75, sig.level = c(.001, .01, .05), pch.cex =0.8,
insig = "label_sig", pch.col = "white", is.corr=FALSE,
col=colorRampPalette(c("dark orange", "white", "blue"))(50), tl.col = "black", cl.lim=c(-1,1))
data <- read.csv("Function_Array_NASALv1.csv")
is.na(data)
data <- na.omit(data)
featCols <- c(2:6)
fxnCols <- 7:20
corrMat <- matrix(0, nrow = length(fxnCols), ncol = length(featCols))
colnames(corrMat) = colnames(data)[featCols]
row.names(corrMat) = colnames(data)[fxnCols]
pMat = corrMat
for (i in 1:nrow(corrMat)){
for (j in 1:ncol(corrMat)){
fxn = row.names(corrMat)[i]
feat = colnames(corrMat)[j]
corrMat[fxn,feat] = cor(x = data[,feat], y = data[,fxn])
pMat[fxn,feat] = cor.test(x = data[,feat], y = data[,fxn])$p.value
}
}
corrplot(corrMat, p.mat = pMat, method = "shade", tl.cex = 0.75, sig.level = c(.001, .01, .05), pch.cex =0.8,
insig = "label_sig", pch.col = "white", is.corr=FALSE,
col=colorRampPalette(c("dark orange", "white", "blue"))(50), tl.col = "black", cl.lim=c(-1,1))
rm(list = ls())
library(corrplot)
library(Hmisc)
library(RColorBrewer)
library(gtools)
data <- read.csv("Function_SERUMv1.csv")
rownames(data)<-data[,1]
data[,1]<-NULL
data <- na.omit(data)
panel.cor <- function(x,y){
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
p <- cor.test(x,y)$p.value
r <- cor(x,y,use="pairwise.complete.obs")
txt <- stars.pval(p)
cex.cor <- 0.8/strwidth(txt)
fill=brewer.pal(n=8, name="RdYlBu")
if(r < -0.75){fill=fill[1]}
else if (r > -0.75 & r <= -0.5){fill=fill[2]}
else if (r > -0.5 & r <= -0.25){fill=fill[3]}
else if (r > -0.25 & r <= 0){fill=fill[4]}
else if (r > 0 & r <= 0.25){fill=fill[5]}
else if (r > 0.25 & r <= 0.5){fill=fill[6]}
else if (r > 0.5 & r <= 0.75){fill=fill[7]}
else (fill=fill[8])
rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4],col = fill)
text(0.5, 0.5, txt)
}
upper.panel<-function(x,y){
points(x,y, pch = 5)
}
M<-rcorr(as.matrix(data))
#just the lower cor plot
#both
pairs(data,lower.panel = panel.cor, upper.panel = upper.panel)
#splice from legend below
corrplot(M$r,p.mat=M$P,insig="label_sig",sig.level =c(0.001,.01,.05),pch.cex=0.8,pch.col="white",
method="shade",add=F, col=colorRampPalette(c("dark orange", "white", "blue"))(50),type="upper",
diag = F, tl.col = "black",tl.cex=0.75)
data <- read.csv("Function_NASALv1.csv")
rownames(data)<-data[,1]
data[,1]<-NULL
data <- na.omit(data)
panel.cor <- function(x,y){
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
p <- cor.test(x,y)$p.value
r <- cor(x,y,use="pairwise.complete.obs")
txt <- stars.pval(p)
cex.cor <- 0.8/strwidth(txt)
fill=brewer.pal(n=8, name="RdYlBu")
if(r < -0.75){fill=fill[1]}
else if (r > -0.75 & r <= -0.5){fill=fill[2]}
else if (r > -0.5 & r <= -0.25){fill=fill[3]}
else if (r > -0.25 & r <= 0){fill=fill[4]}
else if (r > 0 & r <= 0.25){fill=fill[5]}
else if (r > 0.25 & r <= 0.5){fill=fill[6]}
else if (r > 0.5 & r <= 0.75){fill=fill[7]}
else (fill=fill[8])
rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4],col = fill)
text(0.5, 0.5, txt)
}
upper.panel<-function(x,y){
points(x,y, pch = 5)
}
M<-rcorr(as.matrix(data))
#just the lower cor plot
#both
pairs(data,lower.panel = panel.cor, upper.panel = upper.panel)
#splice from legend below
corrplot(M$r,p.mat=M$P,insig="label_sig",sig.level =c(0.001,.01,.05),pch.cex=0.8,pch.col="white",
method="shade",add=F, col=colorRampPalette(c("dark orange", "white", "blue"))(50),type="upper",
diag = F, tl.col = "black",tl.cex=0.75)
